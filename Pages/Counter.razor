@page "/counter"
@using Blazor4.Data
@using Blazor4.Data.CustomProvider;
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject UserManager<ApplicationUser> userManager
@inject IHttpContextAccessor httpContext
@inject RoleManager<ApplicationRole> roleManager

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

@foreach (var role in userRoles)
{
    <p>@role</p>
}

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {

    private int currentCount = 0;
    private IList<string> userRoles;

    [Inject]
    public CustomRoleManager CustomRoleManager { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }



    [Authorize(Roles = "Admin")]
    protected override async Task OnInitializedAsync()
    {
        var user = httpContext.HttpContext?.User;

        if (user != null && user.Identity?.IsAuthenticated == true)
        {
            var userId = userManager.GetUserId(user);
            var applicationUser = await userManager.FindByIdAsync(userId);

            if (applicationUser != null)
            {
                var isAdmin = CustomRoleManager.AdminEmails.Contains(applicationUser.Email);

                if (!isAdmin)
                {

                    NavigationManager.NavigateTo("/accessdenied");
                }
            }
        }
        else
        {

            NavigationManager.NavigateTo("/login");
        }
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
